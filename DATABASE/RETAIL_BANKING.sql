CREATE DATABASE RETAIL_BANKING;


USE RETAIL_BANKING;
CREATE TABLE ROLE
(
  ROLE_ID VARCHAR(7) NOT NULL PRIMARY KEY DEFAULT '0', ROLE VARCHAR(30)
);
CREATE TABLE USER_SEQ
(
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

CREATE TABLE USER
(
  USER_ID VARCHAR(7) NOT NULL PRIMARY KEY DEFAULT '0', USER_NAME VARCHAR(30),PASSWORD varchar(30),ROLE_ID varchar(10) 
);

DELIMITER $$
CREATE TRIGGER User_table_insert
BEFORE INSERT ON USER
FOR EACH ROW
BEGIN
  INSERT INTO USER_SEQ VALUES (NULL);
  SET NEW.USER_ID = CONCAT('U000', LPAD(LAST_INSERT_ID(), 3, '0'));
END$$
DELIMITER ;

insert into USER (USER_NAME,PASSWORD,ROLE_ID) values("Cashier@retailbank.com","Cashier@123","R0001");

insert into USER (USER_NAME,PASSWORD,ROLE_ID) values("Executive@retailbank.com","Executive@123","R0002");

INSERT INTO ROLE  VALUES("R0001","CASHIER");

INSERT INTO ROLE  VALUES("R0002","EXCECUTIVE");


CREATE TABLE CUSTOMER_SEQ
(
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);
CREATE TABLE CUSTOMER
(
  CUSTOMER_ID VARCHAR(7) NOT NULL PRIMARY KEY DEFAULT '0',SSNID VARCHAR(20), CUSTOMER_NAME VARCHAR(30), CUSTOMER_ADRESS VARCHAR(100),AGE int ,STATE VARCHAR(30),CITY varchar(30)
);

DELIMITER $$
CREATE TRIGGER Customer_table_insert
BEFORE INSERT ON CUSTOMER
FOR EACH ROW
BEGIN
  INSERT INTO CUSTOMER_SEQ VALUES (NULL);
  SET NEW.CUSTOMER_ID = CONCAT('C000', LPAD(LAST_INSERT_ID(), 3, '0'));
END$$	
DELIMITER ;


CREATE TABLE USER_CUSTOMER
(USER_ID VARCHAR(7),CUSTOMER_ID VARCHAR(7)
);

-- customer log table
CREATE TABLE CUSTOMER_LOGS
(
CUSTOMER_ID VARCHAR(7) ,SSNID  VARCHAR(20),STATUS VARCHAR(20),MESSAGE VARCHAR(50),LAST_UPDATED TimeStamp
);




ALTER TABLE CUSTOMER_LOGS ADD CONSTRAINT FOREIGN KEY (CUSTOMER_ID) references CUSTOMER(CUSTOMER_ID);
ALTER TABLE USER ADD CONSTRAINT FOREIGN KEY (ROLE_ID) references ROLE(ROLE_ID);
ALTER TABLE USER_CUSTOMER ADD CONSTRAINT FOREIGN KEY (CUSTOMER_ID) references CUSTOMER(CUSTOMER_ID);
ALTER TABLE USER_CUSTOMER ADD CONSTRAINT FOREIGN KEY (USER_ID) references USER(USER_ID);

SET SQL_SAFE_UPDATES=0;





CREATE TABLE ACCOUNTS
(
ACCOUNT_ID  VARCHAR(7) PRIMARY KEY ,ACCOUNTS_TYPE VARCHAR(10)
); 
CREATE TABLE ACCOUNT_SEQ
(
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

DELIMITER $$
CREATE TRIGGER accounts_table_insert
BEFORE INSERT ON ACCOUNTS
FOR EACH ROW
BEGIN
  INSERT INTO ACCOUNT_SEQ VALUES (NULL);
  SET NEW.ACCOUNT_ID = CONCAT('A000', LPAD(LAST_INSERT_ID(), 3, '0'));
END$$	
DELIMITER ;

CREATE TABLE ACCOUNT_CUSTOMER(
ACCOUNT_ID  VARCHAR(7)  ,CUSTOMER_ID varchar(7) NOT NULL, FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ACCOUNT_ID)
);


CREATE TABLE ACCOUNT_BALANCE (
ACCOUNT_ID VARCHAR(7) , BALANCE DOUBLE ,FOREIGN KEY (ACCOUNT_ID) REFERENCES  ACCOUNTS(ACCOUNT_ID)
);


CREATE TABLE TRANSACTIONS
(
TID  VARCHAR(8) PRIMARY KEY ,ACCOUNT_ID VARCHAR(10) ,TRANSACTION_TYPE VARCHAR(10), ACCOUNT_TYPE VARCHAR(10) , AMOUNT INT , TRANSACTION_DATE timestamp
); 
CREATE TABLE TRANSACTIONS_SEQ
(
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

DELIMITER $$
CREATE TRIGGER transaction_table_insert
BEFORE INSERT ON TRANSACTIONS
FOR EACH ROW
BEGIN
  INSERT INTO TRANSACTIONS_SEQ VALUES (NULL);
  SET NEW.TID = CONCAT('T000', LPAD(LAST_INSERT_ID(), 3, '0'));
END$$	
DELIMITER ;


CREATE VIEW TRANSACTION_VIEW AS SELECT  A.ACCOUNT_ID , A.ACCOUNTS_TYPE , AC.CUSTOMER_ID , AB.BALANCE FROM ACCOUNTS A INNER JOIN ACCOUNT_CUSTOMER AC ON A.ACCOUNT_ID = AC.ACCOUNT_ID INNER JOIN ACCOUNT_BALANCE AB ON AB.ACCOUNT_ID = A.ACCOUNT_ID; 


CREATE TABLE ACCOUNT_LOGS
(
CUSTOMER_ID VARCHAR(7) ,ACCOUNT_ID  VARCHAR(20), ACCOUNT_TYPE VARCHAR(20) , STATUS VARCHAR(20),MESSAGE VARCHAR(50),LAST_UPDATED TimeStamp
);

ALTER TABLE ACCOUNT_LOGS ADD CONSTRAINT FOREIGN KEY (CUSTOMER_ID) references CUSTOMER(CUSTOMER_ID);
ALTER TABLE ACCOUNT_LOGS ADD CONSTRAINT FOREIGN KEY (ACCOUNT_ID) references ACCOUNTS(ACCOUNT_ID);

ALTER TABLE transactions ADD CONSTRAINT FOREIGN KEY (ACCOUNT_ID) references ACCOUNTS(ACCOUNT_ID);







